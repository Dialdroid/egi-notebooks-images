---
name: Build and push containers

on:
  push:
    # only pushes on master so we don't push intermediate results to dockerhub
    branches:
    - master
  pull_request:

jobs:
#  sidecar-images:
#    name: Build and push sidecar images
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        image:
#        - d4science-storage
#        - oneclient-sidecar
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Docker meta
#        id: docker_meta
#        uses: docker/metadata-action@v3
#        with:
#          images: eginotebooks/${{ matrix.image }}
#          tags: |
#            type=sha
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#        if: github.event_name != 'pull_request'
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: ${{ matrix.image }}
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.docker_meta.outputs.tags }}
#          labels: ${{ steps.docker_meta.outputs.labels }}

  base-image:
    name: Build base image
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.docker_meta_base.outputs.tags }}
      base_conda: ${{ steps.docker_meta_base_conda.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta_base
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository_owner }}/notebooks-base
          tags: |
            type=sha
      - name: Docker meta
        id: docker_meta_base_conda
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository_owner }}/notebooks-base-conda
          tags:
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Test
        run: |
          echo \
            ${{ steps.docker_meta_base.outputs.json.tags }} \
            ${{ join(steps.docker_meta_base.outputs.json.tags, '--tag ') }} \
            ${{ join(steps.docker_meta_base.outputs.json.labels, '--label ') }} \
            hello
#      - name: Build base
#        uses: docker/build-push-action@v2
#        with:
#          context: base
#          tags: ${{ steps.docker_meta_base.outputs.tags }}
#          labels: ${{ steps.docker_meta_base.outputs.labels }}
#          target: base
#          outputs: type=docker,dest=/tmp/base.tar
#      - name: Build base + conda
#        uses: docker/build-push-action@v2
#        with:
#          context: base
#          tags: ${{ steps.docker_meta_base_conda.outputs.tags }}
#          labels: ${{ steps.docker_meta_base_conda.outputs.labels }}
#          outputs: type=docker,dest=/tmp/base-conda.tar
#      - name: Upload docker image as artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: images
#          path: /tmp/base*.tar

#  user-images:
#    name: Build and push images
#    runs-on: ubuntu-latest
#    needs: base-image
#
#    strategy:
#      matrix:
#        image:
#        - single-user
#        # - single-user-d4science
#        # - single-user-panosc
#        # - single-user-r-d4science
#        # - single-user-sobigdata
#
#    steps:
#      - name: try to make free space
#        run: |
#          sudo rm -rf /usr/share/dotnet
#          sudo rm -rf /usr/local/lib/android
#          sudo rm -rf /opt/ghc
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Docker meta
#        id: docker_meta
#        uses: docker/metadata-action@v3
#        with:
#          images: eginotebooks/${{ matrix.image }}
#          tags: |
#            type=sha
#      - name: Docker meta
#        id: docker_meta_conda
#        uses: docker/metadata-action@v3
#        with:
#          images: eginotebooks/${{ matrix.image }}-conda
#          tags: |
#            type=sha
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Get previous build base
#        uses: actions/download-artifact@v2
#        with:
#          name: images
#          path: /tmp
#      - name: Load Docker images
#        run: |
#          docker load --input /tmp/base.tar
#          docker load --input /tmp/base-conda.tar
#          docker image ls -a
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#        if: github.event_name != 'pull_request'
#      # Unfortunately I haven't been able to load an prebuilt image here
#      # so not using the build-push-action from docker
#      - name: Build full image
#        run: |
#          docker build \
#            --build-arg BASE_IMAGE=${{ needs.base-image.outputs.base }} \
#            --build-arg BASE_IMAGE_CONDA=${{ needs.base-image.outputs.base_conda }} \
#            ${{ join(steps.docker_meta_conda.outputs.tags, '--tag ') }} \
#            ${{ join(steps.docker_meta_conda.outputs.labels, '--label ') }} \
#            ${{ matrix.image }}
##      - name: Build basic image
##        uses: docker/build-push-action@v2
##        with:
##          context: ${{ matrix.image }}
##          push: ${{ github.event_name != 'pull_request' }}
##          tags: ${{ steps.docker_meta.outputs.tags }}
##          labels: ${{ steps.docker_meta.outputs.labels }}
##          load: ${{ github.event_name == 'pull_request' }}
##          target: base
##          build-args: |
##            BASE_IMAGE=${{ needs.base-image.outputs.base }}
##            BASE_IMAGE_CONDA=${{ needs.base-image.outputs.base_conda }}
#      - uses: addnab/docker-run-action@v3
#        with:
#          image: ${{ steps.docker_meta_conda.outputs.tags }}
#          options: -v ${{ github.workspace }}/${{ matrix.image }}:/image-data
#          run: |
#            for f in /image-data/tests/*.ipynb; do
#              if [ -e "$f" ]; then
#                jupyter nbconvert --ExecutePreprocessor.timeout=600 --to rst \
#                       --execute --stdout $f || exit 1
#              else
#                true
#              fi
#            done
#        if: github.event_name != 'pull_request'
